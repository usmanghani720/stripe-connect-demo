class ChargesController < ApplicationController
  require "stripe"
  Stripe.api_key = 'sk_test_P9ZSzx6MHQxlxqRd1ZyMOKwZ'
    def create
      if User.where.not(stripe_user_id: nil).first.present?
        begin
          charge = Stripe::Charge.create({
            amount: 200, # total amount to charge,
            currency: "usd",
            source: params[:stripeToken], # token generated by Stripe in the frontend
            application_fee_amount: 100, # portion that goes to the Stripe platform account
          }, stripe_account: User.where.not(stripe_user_id: nil).first.stripe_user_id) # id of the Stripe connected account
          #redirect_to payment_thanks_path
      
          rescue Stripe::CardError => e
            flash[:error] = e.message
            redirect_to payment_thanks_path
          rescue Stripe::InvalidRequestError => e
            flash[:error] = e.message
            redirect_to payment_error_path
          rescue Stripe::RateLimitError => e
            flash[:error] = e.message
            redirect_to payment_error_path
          rescue Stripe::AuthenticationError => e
            flash[:error] = e.message
            redirect_to payment_error_path
          rescue Stripe::APIConnectionError => e
            flash[:error] = e.message
            redirect_to payment_error_path
          rescue Stripe::StripeError => e
            flash[:error] = e.message
            redirect_to payment_error_path
          rescue => e
            redirect_to payment_error_path
        end
      end
    end
end
